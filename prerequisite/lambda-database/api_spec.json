[
  {
    "name": "query_uniprot",
    "description": "Query the UniProt REST API using either natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about proteins (e.g., \"Find information about human insulin\")"
        },
        "endpoint": {
          "type": "string",
          "description": "Full or partial UniProt API endpoint URL to query directly (e.g., \"https://rest.uniprot.org/uniprotkb/P01308\")"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_alphafold",
    "description": "Query the AlphaFold Database API for protein structure predictions.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "uniprot_id": {
          "type": "string",
          "description": "UniProt accession ID (e.g., \"P12345\")"
        },
        "endpoint": {
          "type": "string",
          "description": "Specific AlphaFold API endpoint to query: \"prediction\", \"summary\", or \"annotations\""
        },
        "residue_range": {
          "type": "string",
          "description": "Specific residue range in format \"start-end\" (e.g., \"1-100\")"
        },
        "download": {
          "type": "boolean",
          "description": "Whether to download structure files"
        },
        "output_dir": {
          "type": "string",
          "description": "Directory to save downloaded files"
        },
        "file_format": {
          "type": "string",
          "description": "Format of the structure file to download - \"pdb\" or \"cif\""
        },
        "model_version": {
          "type": "string",
          "description": "AlphaFold model version - \"v4\" (latest) or \"v3\", \"v2\", \"v1\""
        },
        "model_number": {
          "type": "integer",
          "description": "Model number (1-5, with 1 being the highest confidence model)"
        }
      },
      "required": [
        "uniprot_id"
      ]
    }
  },
  {
    "name": "query_interpro",
    "description": "Query the InterPro REST API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about protein domains or families"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct endpoint path or full URL (e.g., '/entry/interpro/IPR023411')"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return per page"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_pdb",
    "description": "Query the RCSB PDB database using natural language or a direct structured query.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about protein structures"
        },
        "query": {
          "type": "object",
          "description": "Direct structured query in RCSB Search API format (overrides prompt)"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_pdb_identifiers",
    "description": "Retrieve detailed data and/or download files for PDB identifiers.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "identifiers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of PDB identifiers to query"
        },
        "return_type": {
          "type": "string",
          "description": "Type of results: 'entry', 'assembly', 'polymer_entity', etc."
        },
        "download": {
          "type": "boolean",
          "description": "Whether to download PDB structure files"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of specific attributes to retrieve"
        }
      },
      "required": [
        "identifiers"
      ]
    }
  },
  {
    "name": "query_stringdb",
    "description": "Query the STRING protein interaction database using natural language or direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about protein interactions"
        },
        "endpoint": {
          "type": "string",
          "description": "Full URL to query directly (overrides prompt)"
        },
        "download_image": {
          "type": "boolean",
          "description": "Whether to download image results (for image endpoints)"
        },
        "output_dir": {
          "type": "string",
          "description": "Directory to save downloaded files"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed response information"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_paleobiology",
    "description": "Query the Paleobiology Database (PBDB) API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about fossil records"
        },
        "endpoint": {
          "type": "string",
          "description": "API endpoint name or full URL"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed query information"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_jaspar",
    "description": "Query the JASPAR REST API using natural language or a direct endpoint to retrieve transcription factor binding profiles.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about transcription factor binding profiles"
        },
        "endpoint": {
          "type": "string",
          "description": "API endpoint path (e.g., '/matrix/MA0002.2/') or full URL"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed query information"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_worms",
    "description": "Query the World Register of Marine Species (WoRMS) REST API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about marine species"
        },
        "endpoint": {
          "type": "string",
          "description": "Full URL or endpoint specification"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return full API response details"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_cbioportal",
    "description": "Query the cBioPortal REST API using natural language or a direct endpoint to access cancer genomics data.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about cancer genomics data"
        },
        "endpoint": {
          "type": "string",
          "description": "API endpoint path (e.g., '/studies/brca_tcga/patients') or full URL"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed API response information"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_clinvar",
    "description": "Take a natural language prompt and convert it to a structured ClinVar query.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genetic variants (e.g., \"Find pathogenic BRCA1 variants\")"
        },
        "search_term": {
          "type": "string",
          "description": "Direct search term to use with the ClinVar API"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_geo",
    "description": "Query the NCBI Gene Expression Omnibus (GEO) using natural language or a direct search term.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about RNA-seq, microarray, or other expression data"
        },
        "search_term": {
          "type": "string",
          "description": "Direct search term in GEO syntax"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return verbose results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_dbsnp",
    "description": "Query the NCBI dbSNP database using natural language or a direct search term.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genetic variants/SNPs"
        },
        "search_term": {
          "type": "string",
          "description": "Direct search term in dbSNP syntax"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_ucsc",
    "description": "Query the UCSC Genome Browser API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genomic data"
        },
        "endpoint": {
          "type": "string",
          "description": "Full URL or endpoint specification with parameters"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_ensembl",
    "description": "Query the Ensembl REST API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genomic data"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct API endpoint to query (e.g., \"lookup/symbol/human/BRCA2\") or full URL"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_opentarget",
    "description": "Query the OpenTargets Platform API using natural language or a direct GraphQL query.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about drug targets, diseases, and mechanisms"
        },
        "query": {
          "type": "string",
          "description": "Direct GraphQL query string"
        },
        "variables": {
          "type": "object",
          "description": "Variables for the GraphQL query"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_monarch",
    "description": "Query the Monarch Initiative API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genetic variants"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct API endpoint to query"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_openfda",
    "description": "Query the OpenFDA database for drug, device, and food safety information",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about FDA-regulated products"
        },
        "endpoint": {
          "type": "string",
          "description": "Optional direct OpenFDA API endpoint"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      }
    }
  },
  {
    "name": "query_clinicaltrials",
    "description": "Query ClinicalTrials.gov for studies using natural language, direct endpoint, or structured parameters.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about clinical trials (if no endpoint/params provided)"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct API path or full URL to ClinicalTrials.gov endpoint"
        },
        "term": {
          "type": "string",
          "description": "Free-text search term"
        },
        "status": {
          "type": "string",
          "description": "Overall recruitment status filter, e.g., RECRUITING"
        },
        "condition": {
          "type": "string",
          "description": "Condition/disease filter"
        },
        "intervention": {
          "type": "string",
          "description": "Intervention filter"
        },
        "location": {
          "type": "string",
          "description": "Location filter (country, city, etc.)"
        },
        "phase": {
          "type": "string",
          "description": "Trial phase filter (e.g., PHASE1, PHASE2, PHASE3)"
        },
        "page_size": {
          "type": "integer",
          "description": "Items per page (1-100)"
        },
        "max_pages": {
          "type": "integer",
          "description": "Max pages to fetch for pagination"
        },
        "page_token": {
          "type": "string",
          "description": "Start page token for pagination"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed response structure"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_gwas_catalog",
    "description": "Query the GWAS Catalog API using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about GWAS data"
        },
        "endpoint": {
          "type": "string",
          "description": "Full API endpoint to query (e.g., \"https://www.ebi.ac.uk/gwas/rest/api/studies?diseaseTraitId=EFO_0001360\")"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_gnomad",
    "description": "Query gnomAD for variants in a gene using natural language or direct gene symbol.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about genetic variants"
        },
        "gene_symbol": {
          "type": "string",
          "description": "Gene symbol (e.g., \"BRCA1\")"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed query results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_reactome",
    "description": "Query the Reactome database using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about biological pathways"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct API endpoint or full URL"
        },
        "download": {
          "type": "boolean",
          "description": "Whether to download pathway diagrams"
        },
        "output_dir": {
          "type": "string",
          "description": "Directory to save downloaded files"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_regulomedb",
    "description": "Query the RegulomeDB database using natural language or direct variant/coordinate specification.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about regulatory elements"
        },
        "endpoint": {
          "type": "string",
          "description": "Direct API endpoint to query"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_pride",
    "description": "Query the PRIDE (PRoteomics IDEntifications) database using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about proteomics data"
        },
        "endpoint": {
          "type": "string",
          "description": "The full endpoint to query (e.g., \"https://www.ebi.ac.uk/pride/ws/archive/v2/projects?keyword=breast%20cancer\")"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_gtopdb",
    "description": "Query the Guide to PHARMACOLOGY database (GtoPdb) using natural language or a direct endpoint.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about drug targets, ligands, and interactions"
        },
        "endpoint": {
          "type": "string",
          "description": "Full API endpoint to query (e.g., \"https://www.guidetopharmacology.org/services/targets?type=GPCR&name=beta-2\")"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_mpd",
    "description": "Query the Mouse Phenome Database (MPD) for mouse strain phenotype data using natural language or direct endpoint access.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about mouse phenotypes, strains, or measurements"
        },
        "endpoint": {
          "type": "string",
          "description": "Full API endpoint to query (e.g., 'https://phenomedoc.jax.org/MPD_API/strains')"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_emdb",
    "description": "Query the Electron Microscopy Data Bank (EMDB) for 3D macromolecular structures.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about EM structures and associated data"
        },
        "endpoint": {
          "type": "string",
          "description": "Full API endpoint to query (e.g., \"https://www.ebi.ac.uk/emdb/api/search\")"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return detailed results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  },
  {
    "name": "query_synapse",
    "description": "Query Synapse REST API for biomedical datasets and files using natural language or structured search parameters. Supports optional authentication via SYNAPSE_AUTH_TOKEN environment variable. Results include 'access_restricted' property - if true, dataset requires approval via Synapse web interface and cannot be immediately accessed.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string",
          "description": "Natural language query about biomedical data (e.g., 'Find drug screening datasets')"
        },
        "query_term": {
          "type": "string",
          "description": "Specific search terms for Synapse search"
        },
        "return_fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fields to return in results"
        },
        "max_results": {
          "type": "integer",
          "description": "Maximum number of results to return. Default 20 is optimal for most searches. Use up to 50 if extensive results are desired for comprehensive analysis."
        },
        "query_type": {
          "type": "string",
          "description": "Type of entity to search for (file, project, folder, etc.)"
        },
        "verbose": {
          "type": "boolean",
          "description": "Whether to return full API response or formatted results"
        }
      },
      "required": [
        "prompt"
      ]
    }
  }
  
]